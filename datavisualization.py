# -*- coding: utf-8 -*-
"""datavisualization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jm_DjfImBa3iqZ-eytRoX4qQlzeutFqg
"""

# Step 1: Import required libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Step 2: Load the dataset (Replace with your file path or upload in Colab)
from google.colab import files
uploaded = files.upload()
file_path = '/content/smart_home_energy_consumption_large.csv'

data = pd.read_csv(file_path)

# Step 3: Data overview
print("Dataset Info:")
print(data.info())
print("\nFirst 5 Rows:")
print(data.head())

# Step 4: Convert 'Date' column to datetime
data['Date'] = pd.to_datetime(data['Date'])

# Step 5: Visualization 1 - Average Energy Consumption by Appliance Type
plt.figure(figsize=(10, 6))
sns.barplot(data=data, x='Appliance Type', y='Energy Consumption (kWh)', ci=None, palette="viridis")
plt.title('Average Energy Consumption by Appliance Type')
plt.xticks(rotation=45)
plt.ylabel('Energy Consumption (kWh)')
plt.xlabel('Appliance Type')
plt.tight_layout()
plt.show()

# Step 6: Visualization 2 - Energy Consumption Trend Over Time
daily_consumption = data.groupby('Date')['Energy Consumption (kWh)'].sum().reset_index()
plt.figure(figsize=(12, 6))
plt.plot(daily_consumption['Date'], daily_consumption['Energy Consumption (kWh)'], color='blue', linewidth=2)
plt.title('Daily Energy Consumption Over Time')
plt.xlabel('Date')
plt.ylabel('Energy Consumption (kWh)')
plt.grid()
plt.tight_layout()
plt.show()

# Step 7: Visualization 3 - Energy Consumption by Season
plt.figure(figsize=(8, 6))
sns.boxplot(data=data, x='Season', y='Energy Consumption (kWh)', palette="Set2")
plt.title('Energy Consumption Distribution by Season')
plt.xlabel('Season')
plt.ylabel('Energy Consumption (kWh)')
plt.tight_layout()
plt.show()

# Step 8: Visualization 4 - Correlation Heatmap
numerical_data = data[['Energy Consumption (kWh)', 'Outdoor Temperature (Â°C)', 'Household Size']]
plt.figure(figsize=(8, 6))
sns.heatmap(numerical_data.corr(), annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Heatmap')
plt.tight_layout()
plt.show()